generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                  String          @id @default(uuid())
    firstName           String?
    lastName            String?
    email               String          @unique
    username            String?         @unique
    password            String
    joinedAt            DateTime        @default(now())
    isConfirmed         Boolean         @default(false)
    avatar              String          @default("default.jpg")
    phoneNumber         String?         @unique
    accountType         AccountType     @default(REGULAR)
    tokenVersion        Int             @default(1)
    rating              Float?
    latitude            Float?
    longitude           Float?

    ownedBooks          Book[]          @relation("ownedBooks")
    borrowedBooks       Book[]          @relation("borrowedBooks")

    myReviews           UserReview[]    @relation("myReviews")
    givenReviews        UserReview[]    @relation("givenReviews")

    requestedBooks      BookRequest[]
}

model Preference {
    id                  String          @id @default(uuid())
    book                String?
    author              String?
    genres              Genre[]

    user                User            @relation(fields: [userId], references: [id])
    userId              String          @unique
}

model ConfirmationCode {
    id                  String          @id @default(uuid())
    code                String
    expiresAt           String

    user                User            @relation(fields: [userId], references: [id])
    userId              String          @unique
}

model BookData {
    id                  String          @id @default(uuid())
    isbn                String          @unique
    title               String
    description         String?
    author              String?
    genre               Genre
    language            Language
    image               String
}

model Book {
    id                  String          @id @default(uuid())
    isbn                String      
    title               String
    description         String?
    author              String?
    genre               Genre
    language            Language
    pages               Int?
    image               String
    rating              Float?
    addedAt             DateTime        @default(now())
    latitude            Float
    longitude           Float

    ownedBy             User            @relation("ownedBooks", fields: [ownedById], references: [id])
    ownedById           String      

    borrowedBy          User?           @relation("borrowedBooks", fields: [borrowedById], references: [id])
    borrowedById        String?

    requestedBy         BookRequest[]
}

model BookRequest {
    id                  String          @id @default(uuid())
    requestedAt         DateTime        @default(now())

    user                User            @relation(fields: [userId], references: [id])
    userId              String

    book                Book            @relation(fields: [bookId], references: [id])
    bookId              String
}

model BookReview {
    id                  String          @id @default(uuid())
    isbn                String  
    content             String
    rating              Float

    user                User            @relation(fields: [userId], references: [id])
    userId              String
}

model UserReview {
    id                  String          @id @default(uuid())
    content             String
    rating              Float

    user                User            @relation("myReviews", fields: [userId], references: [id])
    userId              String

    reviewer            User            @relation("givenReviews", fields: [reviewerId], references: [id])
    reviewerId          String
}

enum Genre {
    ACTION
    ADVENTURE
    BIOGRAPHY
    BUSINESS
    CHILDRENS
    COOKING
    CRIME
    DRAMA
    DICTIONARY
    ENCYKLOPEDIA
    GUIDE
    FAIRYTALE
    FANTASY
    HEALTH
    HISTORICAL
    HUMOR
    HORROR
    JOURNAL
    MATH
    ROMANCE
    PHILOSOPHY
    RELIGION
    SCIENCE_FICTION
    SELF_DEVELOPMENT
    SPORTS
    TRAVEL
    WESTERN
}

enum Language {
    ENGLISH
    GERMAN
    FRENCH
    SPANISH
}

enum AccountType {
    REGULAR
    GOOGLE
    FACEBOOK
}